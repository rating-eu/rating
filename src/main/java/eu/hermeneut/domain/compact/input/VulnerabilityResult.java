/*
 * Copyright 2019 HERMENEUT Consortium
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

package eu.hermeneut.domain.compact.input;

import java.util.Map;

public class VulnerabilityResult {
    private Map<Long/*ThreatAgentID*/, ThreatAgentVulnerability> initialVulnerability;

    private Map<Long/*ThreatAgentID*/, ThreatAgentVulnerability> contextualVulnerability;

    private Map<Long/*ThreatAgentID*/, ThreatAgentVulnerability> refinedVulnerability;

    public Map<Long, ThreatAgentVulnerability> getInitialVulnerability() {
        return initialVulnerability;
    }

    public void setInitialVulnerability(Map<Long, ThreatAgentVulnerability> initialVulnerability) {
        this.initialVulnerability = initialVulnerability;
    }

    public Map<Long, ThreatAgentVulnerability> getContextualVulnerability() {
        return contextualVulnerability;
    }

    public void setContextualVulnerability(Map<Long, ThreatAgentVulnerability> contextualVulnerability) {
        this.contextualVulnerability = contextualVulnerability;
    }

    public Map<Long, ThreatAgentVulnerability> getRefinedVulnerability() {
        return refinedVulnerability;
    }

    public void setRefinedVulnerability(Map<Long, ThreatAgentVulnerability> refinedVulnerability) {
        this.refinedVulnerability = refinedVulnerability;
    }
}
